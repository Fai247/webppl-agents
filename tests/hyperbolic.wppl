var start = { 
  loc : [3,0],
  dead : false,
  digest : 2, 
  timeLeft : 14
};

var donutUtility = makeDonutUtility(2, {
    'Donut N' : [1, -1],
    'Donut S' : [1, -1],
    'Veg'   : [-1, 2],
    'Noodle': [0, 0]
});

var world = makeDonutWorld2({ big : true});
var agent = makeHyperbolicDiscounter(
    { utility : donutUtility,
      alpha : 500, 
      discount : 1, 
      sophisticatedOrNaive  : 'sophisticated' 
    }, world);
var trajectory = simulate(start, world, agent, 12, 'states');
assert.ok(gridEqual(last(trajectory).loc, [4, 7]), "sophisticated didn't end up in 3,5");
assert.ok(trajectory[5].loc[0] == 5, "sophisticated didn't take right side");

var agent2 = makeHyperbolicDiscounter(
    { utility : donutUtility,
      alpha : 500, 
      discount : 1, 
      sophisticatedOrNaive  : 'naive' 
    }, world);
var trajectory = simulate(start, world, agent2, 12, 'states');
assert.ok(gridEqual(last(trajectory).loc, [2, 5]), "naive didn't end up in 1,3");
assert.ok(trajectory[4].loc[0] == 3, "naive didn't take left side");



var state = update(start, { loc : [3,3], timeLeft : 11 });
var naiveExp = agent2.expectedUtility;
var naive22utilities = map(function (a) { return  naiveExp(state, a, 0); }, world.actions);

var sophExp = agent.expectedUtility;
var soph22utilities = map(function (a) { return  sophExp(state, a, 0); }, world.actions);
    
assert.ok(
    naive22utilities[0] != soph22utilities[0] &&
    naive22utilities[1] != soph22utilities[1] &&
    naive22utilities[2] != soph22utilities[2] &&
    naive22utilities[3] != soph22utilities[3] 
    , "some utilities match!");
