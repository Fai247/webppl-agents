var start = { 
  loc : [3,0],
  terminateAfterAction : false,
  timeLeft : 15
};


var world = makeRestaurantChoiceMDP({noReverse:false});
var donutUtility = makeDonutUtility(world, {
    'Donut N' : [10, -10],
    'Donut S' : [10, -10],
    'Veg'   : [-10, 20],
    'Noodle': [0, 0]
});

var agent = makeHyperbolicDiscounter(
    { utility : donutUtility,
      alpha : 500, 
      discount : 1, 
      sophisticatedOrNaive  : 'sophisticated' 
    }, world);



var states = map(first, simulateHyperbolic(start, world, agent) );
assert.ok(_.isEqual(last(states).loc, [4, 7]), "sophisticated didn't end up in 4,7");
assert.ok(states[5].loc[0] == 5, "sophisticated didn't take right side");

var agent2 = makeHyperbolicDiscounter(
    { utility : donutUtility,
      alpha : 500, 
      discount : 1, 
      sophisticatedOrNaive  : 'naive' 
    }, world);
var trajectory = map(first, simulateHyperbolic(start, world, agent2));
assert.ok(_.isEqual(last(trajectory).loc, [2, 5]), "naive didn't end up in 1,3");
assert.ok(trajectory[4].loc[0] == 3, "naive didn't take left side");



var state = update(start, { loc : [3,3], timeLeft : 11 });
var naiveExp = agent2.expectedUtility;
var naive22utilities = map(function (a) { return  naiveExp(state, a, 0); }, world.actions);

var sophExp = agent.expectedUtility;
var soph22utilities = map(function (a) { return  sophExp(state, a, 0); }, world.actions);
    
assert.ok(
    naive22utilities[0] != soph22utilities[0] &&
    naive22utilities[1] != soph22utilities[1] &&
    naive22utilities[2] != soph22utilities[2] &&
    naive22utilities[3] != soph22utilities[3] 
    , "some utilities match!");
console.log("done with hyperbolic gridworld tests");
