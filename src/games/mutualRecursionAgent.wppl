// this program makes an agent for a two-player game.
// the agent at level n assumes that it is playing an agent at level n - 1.
// the agent at level 0 randomly selects actions.

var exampleOptions = {
  game: null, // code for the game that the agent is playing
  playerNumber: 0, // specifying which player the agent is
  level: 3, // specifying the depth of recursion
  alpha: 10
};

var mutualRecursionAgent = function(options){
  var game = options.game;
  var playerNumber = options.playerNumber;
  var level = Math.max(options.level, 0);
  var alpha = level === 0 ? 0 : options.alpha;
  var utility = playerNumber === 0 ? game.utility0 : game.utility1;
  var oppUtility = playerNumber === 0 ? game.utility1 : game.utility0;
  var transition = game.transition;
  var myActions = playerNumber === 0 ? game.actions0 : game.actions1;

  var oppActions = playerNumber === 0 ? game.actions1 : game.actions0;
  var oppOptions = update(options, {level: level - 1,
				    utility: oppUtility,
				    oppUtility: utility});
  // redefine to use CDT agent
  var randomActOpp = function(state){
    return Enumerate(function(){
      return uniformDraw(oppActions);
    });
  };
  
  var oppAct = level === 0 ? randomActOpp
	: mutualRecursionAgent(oppOptions).act;

  return makeCDTAgent(update(options, {alpha: alpha, oppAct: oppAct}));
 
};
