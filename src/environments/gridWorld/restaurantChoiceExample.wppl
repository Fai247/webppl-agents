// Restaurant Choice Constructor and Helpers

var restaurant = {
  donutN : { name : 'Donut N'},
  donutS : { name : 'Donut S'},
  veg   : { name : 'Veg'},
  noodle: { name : 'Noodle'}
};

var makeRestaurantChoiceMDP = function(options) { 
  var __ = ' '; 
  var DN = restaurant.donutN;
  var DS = restaurant.donutS;
  var V = restaurant.veg;
  var N = restaurant.noodle;

  var defaults = {noReverse:true, maxTimeAtRestaurant:2};
  var options = update(defaults, options);

  var features = 
    [['#', '#', '#', '#',  V , '#'],
     ['#', '#', '#',  __ ,  __ ,  __ ],  
     ['#', '#', DN ,  __ , '#',  __ ],
     ['#', '#', '#',  __ , '#',  __ ],
     ['#', '#', '#',  __ ,  __ ,  __ ],
     ['#', '#', '#',  __ , '#',  N ],
     [ __ ,  __ ,  __ ,  __ , '#', '#'],
     [DS , '#', '#',  __ , '#', '#']];

  var options = update(options, {gridFeatures: features});
  return makeGridWorld(options).world;
};


var restaurantChoiceStart = { 
  loc : [3,1],
  terminateAfterAction : false,
  timeLeft : 11
};



// trajectories starting from [3,1] for big donutWorld
var restaurantNameToPath = {
  naive: [[3,1], [3,2], [3,3], [3,4], [3,5], [2,5], [2,5]],
  
  sophisticated: [[ 3, 1 ],[ 3, 2 ],[ 3, 3 ],[ 4, 3 ], [ 5, 3 ],
                  [ 5, 4 ], [ 5, 5 ], [ 5, 6 ], [4, 6 ], [ 4, 7 ], [4,7] ],

  donutNorth: [[3,1], [3,2], [3,3], [3,4], [3,5], [2,5], [2,5]],
  
  donutSouth: [[3,1], [2,1], [1,1], [0,1], [0,0], [0,0]],
  
  vegDirect: [[3,1], [3,2], [3,3], [3,4], [3,5], [3,6], [4,6], [4,7], [4,7]]
};

var restaurantNameToPathSmall = {
  naive: [[2,1], [2,2], [2,3], [2,4], [1,4]],
  sophisticated: [[2,1], [2,2], [2,3], [3,3], [4,3], [4,4], [4,5], [3,5], [3,6]]
};

var restaurantNameToObservationTime11 = {
  naive: 
  [[{"loc":[3,1],"terminateAfterAction":false,"timeLeft":11},"u"],
   [{"loc":[3,2],"terminateAfterAction":false,"timeLeft":10,"previousLoc":[3,1]},"u"],
   [{"loc":[3,3],"terminateAfterAction":false,"timeLeft":9,"previousLoc":[3,2]},"u"],
   [{"loc":[3,4],"terminateAfterAction":false,"timeLeft":8,"previousLoc":[3,3]},"u"],
   [{"loc":[3,5],"terminateAfterAction":false,"timeLeft":7,"previousLoc":[3,4]},"l"],
   [{"loc":[2,5],"terminateAfterAction":false,"timeLeft":6,"previousLoc":[3,5],"timeAtRestaurant":0},"l"],
   [{"loc":[2,5],"terminateAfterAction":true,"timeLeft":6,"previousLoc":[2,5],"timeAtRestaurant":1},"l"]],

  sophisticated:
  [[{"loc":[3,1],"terminateAfterAction":false,"timeLeft":11},"u"],[{"loc":[3,2],"terminateAfterAction":false,"timeLeft":10,"previousLoc":[3,1]},"u"],[{"loc":[3,3],"terminateAfterAction":false,"timeLeft":9,"previousLoc":[3,2]},"r"],[{"loc":[4,3],"terminateAfterAction":false,"timeLeft":8,"previousLoc":[3,3]},"r"],[{"loc":[5,3],"terminateAfterAction":false,"timeLeft":7,"previousLoc":[4,3]},"u"],[{"loc":[5,4],"terminateAfterAction":false,"timeLeft":6,"previousLoc":[5,3]},"u"],[{"loc":[5,5],"terminateAfterAction":false,"timeLeft":5,"previousLoc":[5,4]},"u"],[{"loc":[5,6],"terminateAfterAction":false,"timeLeft":4,"previousLoc":[5,5]},"l"],[{"loc":[4,6],"terminateAfterAction":false,"timeLeft":3,"previousLoc":[5,6]},"u"],[{"loc":[4,7],"terminateAfterAction":false,"timeLeft":2,"previousLoc":[4,6],"timeAtRestaurant":0},"l"],[{"loc":[4,7],"terminateAfterAction":true,"timeLeft":2,"previousLoc":[4,7],"timeAtRestaurant":1},"l"]],

  vegDirect: 
  [[{"loc":[3,1],"terminateAfterAction":false,"timeLeft":11},"u"],[{"loc":[3,2],"terminateAfterAction":false,"timeLeft":10,"previousLoc":[3,1]},"u"],[{"loc":[3,3],"terminateAfterAction":false,"timeLeft":9,"previousLoc":[3,2]},"u"],[{"loc":[3,4],"terminateAfterAction":false,"timeLeft":8,"previousLoc":[3,3]},"u"],[{"loc":[3,5],"terminateAfterAction":false,"timeLeft":7,"previousLoc":[3,4]},"u"],[{"loc":[3,6],"terminateAfterAction":false,"timeLeft":6,"previousLoc":[3,5]},"r"],[{"loc":[4,6],"terminateAfterAction":false,"timeLeft":5,"previousLoc":[3,6]},"u"],[{"loc":[4,7],"terminateAfterAction":false,"timeLeft":4,"previousLoc":[4,6],"timeAtRestaurant":0},"l"],[{"loc":[4,7],"terminateAfterAction":true,"timeLeft":4,"previousLoc":[4,7],"timeAtRestaurant":1},"l"]],

  donutSouth:
  [[{"loc":[3,1],"terminateAfterAction":false,"timeLeft":11},"l"],[{"loc":[2,1],"terminateAfterAction":false,"timeLeft":10,"previousLoc":[3,1]},"l"],[{"loc":[1,1],"terminateAfterAction":false,"timeLeft":9,"previousLoc":[2,1]},"l"],[{"loc":[0,1],"terminateAfterAction":false,"timeLeft":8,"previousLoc":[1,1]},"d"],[{"loc":[0,0],"terminateAfterAction":false,"timeLeft":7,"previousLoc":[0,1],"timeAtRestaurant":0},"l"],[{"loc":[0,0],"terminateAfterAction":true,"timeLeft":7,"previousLoc":[0,0],"timeAtRestaurant":1},"l"]]
};

var restaurantNameToObservationTime11Reverse = function(name){
  var ar = restaurantNameToObservationTime11[name];
  return map( function(stateAction){
    var state = stateAction[0];
    var state_noPrevious = _.omit(state,'previousLoc');
    return [state_noPrevious, stateAction[1]];
  }, ar);
};

var restaurantPathToName = function(path){
  var table = _.invert(restaurantNameToPath);
  var name = table[path] || 'not in table';
  return 'path: ' + name;
};

// NOTE: assumes two utilities per restaurant
var makeRestaurantUtilityFunction = function (world, utilityTable) { 
  return function(state, action) {
    var getFeature = world.feature;
    var feature = getFeature(state);

    if (feature.name) { return utilityTable[feature.name][state.timeAtRestaurant]; }
    return utilityTable.timeCost || -.01;
  };
};




// POMDP case
var makeRestaurantChoicePOMDP = function(options){
  var gridworldMDP = makeRestaurantChoiceMDP(options);
  var feature = gridworldMDP.feature;
  return update(makeGridworldPOMDP(gridworldMDP), 
                {feature: feature, restaurantChoiceMDP: gridworldMDP});
};


var allOpenRestaurantChoiceStart = {
  manifestState: { loc: [3,1],
		   terminateAfterAction: false,
		   timeLeft: 11},
  latentState: {'Donut N': true,
		'Donut S': true,
		Veg: true,
		Noodle: true}
};



// exludes last state
var naiveDonutNorthStates = [[3,1], [3,2], [3,3], [3,4], [3,5], [2,5]];
//var sophisticatedVegStates = 
var straightToVegStates = [[3,1], [3,2], [3,3], [3,4], [3,5], [3,6], [4,6], [4,7]];







