var start = { 
  loc : [2,0],
  dead : false,
  digest : 4
};

var donutUtility = makeDonutUtility(4, {
    'Donut' : [1, 0, 0, 0],
    'Veg'   : [0, 0, 0, 3.5],
    'Noodle': [0, 0, 0, 0]
});

var world = makeDonutWorldExtended({ bottomLeftNook : '#' });
var agent = makeHyperbolicDiscounter(donutUtility, 500, 1, 'sophisticated', world);
var trajectory = simulate(start, world, agent, 12, 12, 'states');
assert.ok(gridEqual(last(trajectory).loc, [3, 5]), "sophisticated didn't end up in 3,5");
assert.ok(trajectory[5].loc[0] == 4, "sophisticated didn't take right side");

var world2 = makeDonutWorldExtended({ bottomLeftNook : { name : 'Donut' } });
var agent2 = makeHyperbolicDiscounter(donutUtility, 500, 1, 'naive', world2);
var trajectory = simulate(start, world2, agent2, 12, 12, 'states');
assert.ok(gridEqual(last(trajectory).loc, [1, 3]), "naive didn't end up in 1,3");
assert.ok(trajectory[3].loc[0] == 2, "naive didn't take left side");



var state = update(start, { loc : [2,1], timeLeft : 12 });
var naiveExp = agent2.expUtility;
var naive22utilities = map(function (a) { return  naiveExp(state, a, 0); }, world.actions);

var sophExp = agent.expUtility;
var soph22utilities = map(function (a) { return  sophExp(state, a, 0); }, world.actions);
    
assert.ok(
    naive22utilities[0] != soph22utilities[0] &&
    naive22utilities[1] != soph22utilities[1] &&
    naive22utilities[2] != soph22utilities[2] &&
    naive22utilities[3] != soph22utilities[3] 
    , "some utilities match!");
