var displayMutualRecursionGame = function(game){

  var startState = {loc: 'start',
		    terminateAfterAction: false};
  
  var options0 = {
    game: game,
    startState: startState,
    playerNumber: 0,
    alpha: 100,
    level: 3
  };
  var agent0 = mutualRecursionAgent(options0);

  var options1 = update(options0, {
    playerNumber: 1
  });
  var agent1 = mutualRecursionAgent(options1);

  var trajectory = simulateGame(startState, game, agent0, agent1,
				'stateActions', true);

  console.log(trajectory);

};

console.log('Simulating mutual recursion agent in home-club game');

var homeClubGame = makeHomeClubGame();

displayMutualRecursionGame(homeClubGame);
// for alpha = 100, agent reliably goes home even at level 1
// for alpha = 1, at level 1, agent goes home with probability 0.622.
// at level 2, agent goes home with probability 0.980


console.log('\nSimulating mutual recursion agent in double-club game');

var doubleClubGame = makeDoubleClubGame();

displayMutualRecursionGame(doubleClubGame);
// at alpha = 100, a level 1 agent only goes to cube with probability 0.525
// a level 2 agent also goes to cube with probability 0.994
// a level 3 agent goes with probability 1.

// at alpha = 1, level 1 goes to cube with probability 0.50025
// level 2 goes with probability 0.50037
// level 10 only goes with probability 0.50050

// alpha = 5 seems to converge to going to cube with probability 1:
// level 1, p = 0.50125
// level 3, p = 0.51218
// level 5, p = 0.580
// level 7, p = 0.871
// level 9, p = 0.992

console.log('\nSimulating mutual recursion agent in Matching Pennies');

var matchingPenniesGame = makeMatchingPenniesGame();

displayMutualRecursionGame(matchingPenniesGame);

console.log('\nSimulating mutual recursion agent in Bach or Stravinsky');

var BoSGame = makeBoSGame();

displayMutualRecursionGame(BoSGame);

console.log("\nSimulating mutual recursion agent in one-shot Prisoner's Dilemma");

var PDGame = makePDGame();

displayMutualRecursionGame(PDGame);

console.log("\nSimulating ten-round iterated Prisoner's dilemma");

var ipd = makeIPDRememberOneGame(10);

displayMutualRecursionGame(ipd);
