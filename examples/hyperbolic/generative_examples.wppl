var world = restaurantChoiceMDP; 
var start = restaurantChoiceStart;

var restaurantUtility = makeRestaurantUtilityFunction(world, {
    'Donut N' : [10, -10],  //[immediate reward, delayed reward]
    'Donut S' : [10, -10],
    'Veg'   : [-10, 20],
    'Noodle': [0, 0],
    'timeCost': -.01  // cost of taking a single action 
});

// Construct Sophisticated and Naive agents
var sophisticatedAgent = makeHyperbolicDiscounter(
    { utility : restaurantUtility,
      alpha : 500, 
      discount : 1, 
      sophisticatedOrNaive  : 'sophisticated' 
    }, world);

var trajectory = simulateMDP(start, world, sophisticatedAgent); 
var eus = plannedTrajectories(trajectory, world, sophisticatedAgent);
GridWorld.draw(world, { trajectory : trajectory, dynamicActionExpectedUtilities : eus });

var naiveAgent = makeHyperbolicDiscounter(
    { utility : restaurantUtility,
      alpha : 500, 
      discount : 1, 
      sophisticatedOrNaive  : 'naive' 
    }, world);
var trajectory = simulateMDP(start, world, naiveAgent); 
var eus = plannedTrajectories(trajectory, world, naiveAgent);
GridWorld.draw(world, { trajectory : trajectory, dynamicActionExpectedUtilities : eus });

